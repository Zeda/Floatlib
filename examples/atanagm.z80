_PutS   = 450Ah
_RclAns = 4AD7h
#include "header.z80"
temp    = scrap+30
var_x   = temp+4
var_a   = var_x+4
var_g   = var_a+4
    bcall(_RclAns)
    sub 4
    ret nz
    call tistrToSingle
;First keep the input as X
    ld h,b
    ld l,c
    ld de,var_x
    ldi
    ldi
    ldi
    ldi
;Now we need to do sqrt(x^2+1) -> G, but keep in mind that 'scrap' already has x in it
    ld hl,scrap
    ld d,h
    ld e,l
    ld bc,var_g
    call mulSingle
    ld e,c
    ld d,b
    call iconstSingle \ .db _1
    call addSingle
    ex de,hl
    call sqrtSingle
    ex de,hl
;Now we need 1->A, but HL already points to the built in constant 1
    ld de,var_a
    ldi
    ldi
    ldi
    ldi
;Now we iterate the next step, 10 times can offer 24-bit precision, if the operations are carried out in higher precision, but slightly less here
;More iterations won't help.
    ld a,10
    ex de,hl
    ld de,var_a    
_:
;Arithmetic mean of A and G -> A
    ld b,d
    ld c,e
    call ameanSingle
;Geometric mean of A and G ->G
    ld bc,var_g
    call mulSingle
    call sqrtSingle
    dec a
    jr nz,-_
;now return X/G
    ex de,hl
    ld hl,var_x
    ld bc,scrap
    call divSingle
    ld h,b          ;The result is pointed to by BC
    ld l,c          ;And why not just store the string back to scrap again?
    call single2str ;Converts the float to a string
    bcall(_PutS)    ;String is at scrap, already pointed to by HL.
    ret
